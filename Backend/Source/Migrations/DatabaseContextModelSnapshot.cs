// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Source.Context;
using Source.Dtos;

#nullable disable

namespace Source.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Source.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90a59928-f879-4ba3-9ae6-d3ff7d0e133e"),
                            Description = "Cupcake confeitado de baunilha",
                            ImageUrl = "https://raw.githubusercontent.com/LeoDavii/sources/refs/heads/main/cupcake%20de%20baunilha.png",
                            Name = "Cupcake Baunilha",
                            Value = 12.550000000000001
                        },
                        new
                        {
                            Id = new Guid("f1cb1024-08d4-4985-95c9-9a78753ef199"),
                            Description = "Delicioso cupcake de chocolate 70%",
                            ImageUrl = "https://raw.githubusercontent.com/LeoDavii/sources/refs/heads/main/cupcake%20de%20chocolate.jpeg",
                            Name = "Cupcake Chocolate",
                            Value = 14.550000000000001
                        },
                        new
                        {
                            Id = new Guid("62c050e4-9848-4834-b0ee-839f70c3c9ae"),
                            Description = "Cupcake confeitado de Morango",
                            ImageUrl = "https://raw.githubusercontent.com/LeoDavii/sources/refs/heads/main/cupcake%20morango.png",
                            Name = "Cupcake Morango",
                            Value = 15.550000000000001
                        });
                });

            modelBuilder.Entity("Source.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<IEnumerable<AddressDto>>("Adresses")
                        .HasColumnType("jsonb");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6de158f5-a9a0-431b-8b8a-c00455a06771"),
                            Email = "johnC@test.com.br",
                            Name = "John Customer",
                            Password = "test",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("63129334-0a4f-4fe5-9c6c-e65ee4e0f30f"),
                            Email = "johnM@test.com.br",
                            Name = "John Manager",
                            Password = "test",
                            Role = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
